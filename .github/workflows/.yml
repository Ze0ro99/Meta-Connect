            - الاسم: CN Terragrunt GitHub Actions
  # يمكنك التثبيت على الالتزام الدقيق أو الإصدار.
  # الاستخدامات: CloudNation-nl/cn-terragrunt-github-actions@157d7b2ada26510a0f7ea0180af89bc2cf9305e4
  الاستخدامات: CloudNation-nl/cn-terragrunt-github-actions@v0.0.16
  مع:
    # الأمر الفرعي Terraform أو Terragrunt الذي سيتم تنفيذه.
    الأمر الفرعي tf_actions:
    # ثنائي للاستخدام. Terraform أو Terragrunt
    tf_actions_binary: # اختياري، الافتراضي هو terragrunt
    # إصدار Terraform للتثبيت.
    tf_actions_version: # الافتراضي هو الأحدث
    # إصدار Terragrunt الذي سيتم تثبيته.
    tg_actions_version: # الافتراضي هو الأحدث
    # اسم المضيف لملف بيانات اعتماد CLI.
    tf_actions_cli_credentials_hostname: # اختياري، الافتراضي هو app.terraform.io
    # رمز لملف بيانات اعتماد CLI.
    tf_actions_cli_credentials_token: # اختياري
    # ما إذا كان يجب التعليق على طلبات السحب أم لا.
    tf_actions_comment: # اختياري، الافتراضي هو true
    # دليل عمل Terragrunt.
    tf_actions_working_dir: # اختياري، الافتراضي هو .
    # اكتب تغييرات Terragrunt fmt على ملفات المصدر.
    tf_actions_fmt_write: # اختياري
          
-       uses: actions/download-artifact@v4.1.7
    # Repository name with owner. For example, actions/checkout
    # Default: ${{ github.repository }}
    repository: ''

    # The branch, tag or SHA to checkout. When checking out the repository that
    # triggered a workflow, this defaults to the reference or SHA for that event.
    # Otherwise, uses the default branch.
    ref: ''

    # Personal access token (PAT) used to fetch the repository. The PAT is configured
    # with the local git config, which enables your scripts to run authenticated git
    # commands. The post-job step removes the PAT.
    #
    # We recommend using a service account with the least permissions necessary. Also
    # when generating a new PAT, select the least scopes necessary.
    #
    # [Learn more about creating and using encrypted secrets](https://help.github.com/en/actions/automating-your-workflow-with-github-actions/creating-and-using-encrypted-secrets)
    #
    # Default: ${{ github.token }}
    token: ''

    # SSH key used to fetch the repository. The SSH key is configured with the local
    # git config, which enables your scripts to run authenticated git commands. The
    # post-job step removes the SSH key.
    #
    # We recommend using a service account with the least permissions necessary.
    #
    # [Learn more about creating and using encrypted secrets](https://help.github.com/en/actions/automating-your-workflow-with-github-actions/creating-and-using-encrypted-secrets)
    ssh-key: ''

    # Known hosts in addition to the user and global host key database. The public SSH
    # keys for a host may be obtained using the utility `ssh-keyscan`. For example,
    # `ssh-keyscan github.com`. The public key for github.com is always implicitly
    # added.
    ssh-known-hosts: ''

    # Whether to perform strict host key checking. When true, adds the options
    # `StrictHostKeyChecking=yes` and `CheckHostIP=no` to the SSH command line. Use
    # the input `ssh-known-hosts` to configure additional hosts.
    # Default: true
    ssh-strict: ''

    # The user to use when connecting to the remote SSH host. By default 'git' is
    # used.
    # Default: git
    ssh-user: ''

    # Whether to configure the token or SSH key with the local git config
    # Default: true
    persist-credentials: ''

    # Relative path under $GITHUB_WORKSPACE to place the repository
    path: ''

    # Whether to execute `git clean -ffdx && git reset --hard HEAD` before fetching
    # Default: true
    clean: ''

    # Partially clone against a given filter. Overrides sparse-checkout if set.
    # Default: null
    filter: ''

    # Do a sparse checkout on given patterns. Each pattern should be separated with
    # new lines.
    # Default: null
    sparse-checkout: ''

    # Specifies whether to use cone-mode when doing a sparse checkout.
    # Default: true
    sparse-checkout-cone-mode: ''

    # Number of commits to fetch. 0 indicates all history for all branches and tags.
    # Default: 1
    fetch-depth: ''

    # Whether to fetch tags, even if fetch-depth > 0.
    # Default: false
    fetch-tags: ''

    # Whether to show progress status output when fetching.
    # Default: true
    show-progress: ''

    # Whether to download Git-LFS files
    # Default: false
    lfs: ''

    # Whether to checkout submodules: `true` to checkout submodules or `recursive` to
    # recursively checkout submodules.
    #
    # When the `ssh-key` input is not provided, SSH URLs beginning with
    # `git@github.com:` are converted to HTTPS.
    #
    # Default: false
    submodules: ''

    # Add repository path as safe.directory for Git global config by running `git
    # config --global --add safe.directory <path>`
    # Default: true
    set-safe-directory: ''

    # The base URL for the GitHub instance that you are trying to clone from, will use
    # environment defaults to fetch from the same instance that the workflow is
    # running from unless specified. Example URLs are https://github.com or
    # https://my-ghes-server.example.com
    github-server-url: ''
   jobs:
  example_job:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run some process
        run: |
          echo "Creating artifact..."
          mkdir output
          echo "Hello, World!" > output/hello.txt
          # رفع artifact
          echo "Uploading artifact..."
          - name: Upload artifact
            uses: actions/upload-artifact@v2
            with:
              name: my-artifact
              path: output/

      - name: Download artifact
        uses: actions/download-artifact@v4.1.7
        with:
          name: my-artifact
